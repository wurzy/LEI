POR IMPLEMENTAR:

- lista de erros para apresentar de maneira user-friendly no vue -> keywords reservadas do Strapi

--------------------------------------------------------

PROGRESSO DESTA SEMANA:

- map/filter/reduce
	- função explícita ou anónima
	- todos os argumentos possíveis em JS
	- encadeamento
	- modelos?

- limpeza/reformulação de todos os moustaches por tipo e de maneira a ficarem mais intuitivos
	- index -> bug fix
	- integer -> integer (Int) e formattedInteger (String)
	- float -> float (Float) e formattedFloat (String)
	- date -> sem especificar formatação, devolve data em formato raw JS
	- political_party -> political_party (Object) e political_party_abbr/name (String)
	- pt_entity -> pt_entity (Object) e pt_entity_abbr/name (String)

- correção de erros na parte do modelo Strapi em casos mais complicados

- novo dataset: cidades do mundo
	- city() -> cidade aleatória (String)
	- city(country) -> cidade aleatória do país dado (String)
	- city_coordinates(city, country) -> coordenadas da cidade especificada (é preciso dar o país também porque pode haver várias cidades com o mesmo nome) (Object)
	- city_population(city, country) -> estimativa da população da cidade especificada (String)


























- repeats sem repetir elementos (para 1 moustache)
- dataset memoryBook
- conversão JSON para Strapi
- referenciação local em interpolação
- protótipo inicial do map e filter







































- Autos
- dataset de PRC
- if else if else / or / at_least
- funções anónimas
- referência local em funções e ifs
- referência local em moustaches


- rotas para os datasets de suporte

























- XML
- gramática bullet-proof (Strapi)
- funcionalidades novas dos PPD e Autos
	- index(offset)
	- .string()
	- integer com x número de algarismos (padding de zeros à esquerda)
	- dataset pt_entities -> sigla ou designacao
	- caracteres não-ASCII em nomes de atributos
	- dar moustaches como argumentos ao random -> generalizar os args para qualquer coisa
	- atributo on condition
	- atributos mutuamente exclusivos
	- pelo menos x de um conjunto de atributos
	- repeat_unique com moustaches (precário)































- aceitar vários repeats seguidos (retornar uma lista com várias coleções diferentes)
- moustaches para gerar datas aleatórias
- recursividade infinita no processamento de moustaches (permitir moustaches em qualquer objeto e array)
- moustaches de acesso a datasets
- sistema para definir a linguagem dos datasets
	- moustaches sempre em inglês
	- linha inicial no texto a ser processado que indica pt/en
	- datasets pt e en para cada coleção
- interpolação de strings com moustaches
	- entre plicas pode vir:
		- string vazia: ''
		- string: 'bom dia'
		- moustaches: '{{index()}}'
		- interpolação: 'texto - {{pt_parish()}}, {{pt_county()}}, {{pt_district()}}'

- permitir qualquer tipo em missing/having
- reestruturar o programa para o formato a la json-server que discutimos com o professor
- otimizar a estrutura da gramática
- versão inicial das propriedades com código
- suporte pt/en dos datasets

- range a la Python
- datasets pt/en
- funções
- randoms com garantia de não repetir elementos
- modelo de strapi com a filipa